<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
		http://www.springframework.org/schema/beans/spring-beans-4.2.xsd
  	 	http://www.springframework.org/schema/context 
  	 	http://www.springframework.org/schema/context/spring-context-4.2.xsd
 	 	http://www.springframework.org/schema/aop 
 	 	http://www.springframework.org/schema/aop/spring-aop-4.2.xsd
 	 	http://www.springframework.org/schema/tx 
 	 	http://www.springframework.org/schema/tx/spring-tx-4.2.xsd">

	<context:component-scan
		base-package="com.weng.mmall.controller" />

	<!-- 
	  MessageSource用于解析消息，并支持消息的参数化和国际化。
	  Spring 包含两个内置的MessageSource实现：
		ResourceBundleMessageSource和ReloadableResourceBundleMessageSource。
		后者能够重新加载消息定义，而无需重新启动虚拟机。
	-->
	<bean id="messageSource"
		class="org.springframework.context.support.ReloadableResourceBundleMessageSource">
		<property name="basenames">
			<list>
				<value>classpath:config/messages</value>
			</list>
		</property>
		<property name="defaultEncoding" value="UTF-8" />
	</bean>
	
	 <!-- <context:annotation-config/>
         通过aop命名空间的<aop:aspectj-autoproxy />
         声明自动为spring容器中那些配置@aspectJ切面的bean创建代理，织入切面。

         <aop:aspectj-autoproxy />有一个proxy-target-class属性，默认为false，表示使用jdk动态代理织入增强，
         当配为<aop:aspectj-autoproxy  poxy-target-class="true"/>时，表示使用CGLib动态代理技术织入增强。
         不过即使proxy-target-class设置为false，如果目标类没有声明接口，则spring将自动使用CGLib动态代理。
      -->
    <aop:aspectj-autoproxy/>

</beans>